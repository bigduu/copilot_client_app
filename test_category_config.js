const { invoke } = require('@tauri-apps/api/core');

async function testCategoryConfig() {
  try {
    console.log('üîç Testing tool category configuration...\n');
    
    // Get all enabled categories
    const categories = await invoke('get_enabled_categories');
    console.log('‚úÖ Retrieved categories:', categories.length, 'items');
    
    // Check configuration for each category
    for (const category of categories) {
      console.log(`\nüìÅ Category: ${category.name}`);
      console.log(`   ID: ${category.id}`);
      console.log(`   Display Name: ${category.display_name}`);
      console.log(`   Description: ${category.description}`);
      console.log(`   Icon: ${category.icon}`);
      console.log(`   Enabled Status: ${category.enabled}`);
      console.log(`   Strict Mode: ${category.strict_tools_mode}`);
      console.log(`   Category Type: ${category.category_type}`);
    }
    
    // Check specific categories
    const testCategories = ['command_execution', 'file_operations', 'general_assistant'];
    
    console.log('\nüîç Verifying specific category configurations...');
    for (const categoryId of testCategories) {
      const category = await invoke('get_tool_category_info', { categoryId });
      if (category) {
        console.log(`\n‚úÖ ${categoryId}:`);
        console.log(`   Display Name: ${category.display_name}`);
        console.log(`   Icon: ${category.icon}`);
        console.log(`   Description: ${category.description}`);
      } else {
        console.log(`\n‚ùå ${categoryId}: Configuration not found`);
      }
    }
    
  } catch (error) {
    console.error('‚ùå Test failed:', error);
  }
}

// Note: This script needs to run in Tauri application environment
console.log('‚ö†Ô∏è  This script needs to run in Tauri application environment to access invoke API');
console.log('üìù Please run corresponding code in browser console for testing');